@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inherits LayoutComponentBase

@inject LoginState loginState;
@implements IDisposable



<nav id="fileTabs" class="navbar navbar-expand-lg bg-body-tertiary" style="display:none" >
    <div class="container-fluid">
        <a class="navbar-brand" href="#">Search</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
            <div class="navbar-nav">
                <a id="file-tab" class="nav-link active"  href="accessrequests/add">Access Request</a>
                <a id="payment-tab" class="nav-link disabled" href="/feepayment/add">Payment</a>
                <a id="disclosure-tab" class="nav-link disabled" href="disclosure/add">Disclosure</a>
                <a id="extension-tab" class="nav-link disabled" href="extension/add">Extension</a>
               
            </div>
        </div>
    </div>
</nav>


@code {
    private string? userReg;
    protected async override Task OnInitializedAsync()
    {
        loginState.OnChange += StateHasChanged;

        if (loginState.gFileId > 0)
        {
            var x = loginState.gFileId;
        }


    }


    public void Dispose()
    {
        loginState.OnChange -= StateHasChanged;
    }

}
