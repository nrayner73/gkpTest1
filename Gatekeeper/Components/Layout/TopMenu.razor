@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inherits LayoutComponentBase

@inject LoginState loginState;
@implements IDisposable

<nav class="navbar .navbar-collapse  bg-body-tertiary" >
        <div class="container-fluid">
        <ul id="fileTabs" class="nav nav-pills" style="display:none">
            <li class="nav-item">
                <a id="file-tab" class="nav-link " href="accessrequests/add">Access Request</a>
            </li>
            <li class="nav-item">
                <a id="payment-tab" class="nav-link active" href="/feepayment/add">Payment</a>
            </li>
            <li class="nav-item">
                <a id="note-tab" class="nav-link" href="analystnotes/add">Notes</a>
            </li>
            <li class="nav-item">
                <a id="video-tab" class="nav-link" href="/videonotes/add">Video Notes</a>
            </li>
            <li class="nav-item">
                <a id="disclosure-tab" class="nav-link" href="disclosure/add">Disclousure</a>
            </li>
            <li class="nav-item">
                <a id="extension-tab" class="nav-link" href="extension/add">Extension</a>
            </li>
            <li class="nav-item">
                <a id="other-tab" class="nav-link disabled" aria-disabled="true">Others</a>
            </li>
        </ul>
    </div>
    </nav>

@code {
    private string? userReg;
    protected async override Task OnInitializedAsync()
    {
        loginState.OnChange += StateHasChanged;

        if (loginState.gFileId > 0)
        {
            var x = loginState.gFileId;
        }
      

    }


    public void Dispose()
    {
        loginState.OnChange -= StateHasChanged;
    }

}
