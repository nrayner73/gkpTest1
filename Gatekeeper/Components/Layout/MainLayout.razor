@using Gatekeeper.Models.MenuInfo
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider authenticationProvider

@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject LoginState loginState;
@implements IDisposable


@inject IDbContextFactory<AppDbContext> DbFactory
@inject NavigationManager navigationManager


<style>
    .required {
        color: red;
        background-color: inherit;
        font-weight: bold;
        font-weight: bold;
    }

    .tab {
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: aliceblue;
        /*border-radius: 2px 2px 2px 2px; */
    }

        .tab button {
            color: black;
            background-color: inherit;
            float: left;
            border: 1px solid;
            outline: none;
            cursor: pointer;
            padding: 14px 16px;
            transition: 0.3s;
            font-size: 17px;
            justify-content: space-between
        }

            .tab button:hover {
                background-color: #ddd;
            }

    .tabcontent {
        padding: 6px 12px;
        /* border: 1px solid black; */
        border-top: none;
    }

    .stick-to-right {
        width: 250px;
        float: right;
        justify-content: flex-end;
        margin-left: 500px
    }

</style>

<div class="page">
    @if (canAccess)
    {
        <div class="sidebar">
            <NavMenu />
        </div>
    }
    <main>
        <div class="top-row">
            <div>
            </div>
            <div class="col-7 align-self-start">
                <TopMenu></TopMenu>
            </div>
            <div class="col-3">
                &nbsp;
            </div>
            <div class="col-2  align-self-center" style="font-weight:bold">
                <label id="lblfilenumber" style="display:content">Reg#: @userReg</label>
            </div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {


    private bool canAccess = false;
    public List<Analyst>? analysts { get; set; } = new List<Analyst>();
    private string? userReg;
    protected async override Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();

        loginState.OnChange += StateHasChanged;

        var authState = await authenticationProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var nameUser = user.Identity?.Name;
        userReg = user.Identity?.Name.ToString().ToUpper().Replace("CPSENTERPRISE\\", "");
        analysts = await context.Analysts.Where(x => x.Regno.Contains(userReg) && !x.Status.Contains("del")).ToListAsync();

        if (analysts.Count > 0)
        {
            canAccess = true;
        }
        else
        {
            canAccess = false;
        }

    }

    public void Dispose()
    {
        loginState.OnChange -= StateHasChanged;
    }


    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            // await sessionStorage.SetItemAsync("RQID", fileid);
            await sessionStorage.SetItemAsStringAsync("SessionUser", userReg);
            var RQID = await sessionStorage.GetItemAsync<string>("RQID");


            firstRender = false;
        }


    }

}